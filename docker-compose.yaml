services:
  users_db_mysql:
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: users_db
      MYSQL_USER: user
      MYSQL_PASSWORD: user_password
    volumes:
      - ./users_api/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: always
    networks:
      - system_network
    healthcheck:
      test:
        [
          "CMD",
          "sh",
          "-c",
          "mysqladmin ping -h localhost -u root -p$MYSQL_ROOT_PASSWORD",
        ]
      interval: 10s
      retries: 3

  profiles_db_mysql:
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: profiles_db
      MYSQL_USER: user
      MYSQL_PASSWORD: user_password
    volumes:
      - ./profiles_api/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: always
    networks:
      - system_network
    healthcheck:
      test:
        [
          "CMD",
          "sh",
          "-c",
          "mysqladmin ping -h localhost -u root -p$MYSQL_ROOT_PASSWORD",
        ]
      interval: 10s
      retries: 3

  rabbitmq:
    image: rabbitmq:3.8
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: always
    networks:
      - system_network
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 5s
      timeout: 3s
      retries: 30

  logs_api:
    build:
      context: ./logs_api
    ports:
      - "5005:5005"
    depends_on:
      - rabbitmq
    environment:
      RABBITMQ_SERVICE: rabbitmq
      SERVICE_NAME: logs_api
    volumes:
      - ./logs_api:/app
    networks:
      - system_network
    restart: always
    tty: true
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:5005/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  users_api:
    build:
      context: ./users_api
    ports:
      - "5000:5000"
    depends_on:
      - users_db_mysql
      - rabbitmq
    environment:
      SERVICE: users_db_mysql
      USER: root
      PASSWORD: root_password
      DATABASE: users_db
      RABBITMQ_SERVICE: rabbitmq
      SERVICE_NAME: users_api
      SECRET_KEY: microcevichesecretkey@2011
    volumes:
      - ./users_api:/app
    restart: always
    networks:
      - system_network
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:5000/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  profiles_api:
    build:
      context: ./profiles_api
    ports:
      - "4000:4000"
    depends_on:
      - profiles_db_mysql
      - users_api
      - rabbitmq
    environment:
      MYSQL_SERVICE: profiles_db_mysql
      MYSQL_USER: root
      MYSQL_PASSWORD: root_password
      MYSQL_DATABASE: profiles_db
      RABBITMQ_SERVICE: rabbitmq
      SERVICE_NAME: profiles_api
      SECRET_KEY: microcevichesecretkey@2011
    volumes:
      - ./profiles_api:/home/node/app
    restart: always
    networks:
      - system_network
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:4000/health"]
      interval: 10s
      start_period: 10s
      timeout: 5s
      retries: 6

  gateway_api:
    build:
      context: ./gateway_api
    ports:
      - "8080:8080"
    depends_on:
      - users_api
    environment:
      RABBITMQ_SERVICE: rabbitmq
      SERVICE_NAME: gateway_api
      USERS_API_URL: "http://users_api:5000"
      PROFILES_API_URL: "http://profiles_api:4000"
    restart: always
    networks:
      - system_network
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 3

networks:
  system_network:
